apply plugin: 'com.android.library'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.0"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.+'
    testCompile 'junit:junit:4.12'
    compile 'com.squareup.retrofit2:retrofit:2.4.0'
    compile 'com.squareup.retrofit2:converter-scalars:2.4.0'
    compile 'com.squareup.retrofit2:converter-gson:2.4.0'
    compile 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'
    compile 'io.reactivex.rxjava2:rxjava:2.2.3'
    compile 'io.reactivex.rxjava2:rxandroid:2.1.0'
}

/*********************上传jCenter依赖*********************/
apply plugin: 'com.novoda.bintray-release'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.3'
        classpath 'com.novoda:bintray-release:0.8.0'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

/**避免中文注释:编码GBK的不可映射字符**/
tasks.withType(Javadoc) {
    options {
        encoding "UTF-8"
        charSet 'UTF-8'
        links "http://docs.oracle.com/javase/7/docs/api"
    }
}

/**避免Javadocs错误:找不到引用**/
tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
}

/**发布到我的Bintray仓库**/
def user = getPropertyValue('bintrayUser')
def key = getPropertyValue('bintrayKey')
def org = getPropertyValue('userOrg')

publish {
    bintrayUser = user
    bintrayKey = key
    dryRun = false
    userOrg = org
    groupId = 'com.excellence.retrofit'
    artifactId = 'retrofit2'
    publishVersion = '2.0.1'
    desc = 'Retrofit封装'
    website = 'https://github.com/VeiZhang/RetrofitClient'
    licences = ['Apache-2.0']
}

/**读取bintray.key文件的key**/
def getPropertyValue(String key) {
    if (key == null || key.length() == 0)
        return null

    File file = project.rootProject.file('../../bintray.key')
    if (!file.exists())
        return null

    InputStream inputStream = file.newDataInputStream()
    Properties properties = new Properties()
    properties.load(inputStream)

    //读取Key
    return properties.getProperty(key)
}